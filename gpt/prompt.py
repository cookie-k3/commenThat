from typing import List

def build_prompt(comments: List[str]) -> str:
    numbered = "\n".join([f"{i+1}. {c.strip()}" for i, c in enumerate(comments)])
    return f"""
다음은 유튜브 댓글 목록입니다. 각 댓글마다 반드시 하나의 범주를 선택해 주세요. 요청한 댓글 개수와 출력 결과 개수가 반드시 일치해야 합니다.  

🎯 범주 정의:

- **joy**: 유쾌하거나 웃긴 상황을 표현한 댓글, 단순 웃음 표현 댓글(예: 너무 재밌어요, ㅋㅋㅋㅋ, 즐거웠어요,개웃기다, 빵터졌어요 입덕했습니다)
- **supportive**: 상대방을 응원, 위로하거나 조언하는 댓글. 감정 표현이 있어도 응원이 핵심이면 이 범주. (예: 파이팅!, 힘내세요, 응원합니다, 무리하지 마세요, 고생했다,)
- **suggestion**: 콘텐츠의 자막, 편집, 아이디어 등 개선 제안 또는 요청, 맞춤법 지적 (예: 자막 넣어주세요, 이런 영상 좋아요, 다음엔 이런거 해주세요, 겨울에 배구 직관 와 주세요 ㅠㅠㅠㅠ, 롯데는왜 안해줌…., 와주세요, 3분 53초 예쁘면 안 돼죠 > 예쁘면 안 되죠가 맞습니다, 말왕아 다리좀 오므려라~~~!!!,아니 말왕형 얼굴에 뭐라도 바르고 나오지 ㅜ)
- **question**: 질문 형식으로 영상이나 출연자에 대해 궁금함을 표현한 댓글, 영상이나 인물에 대해 **의문을 직접적으로 표현한 질문** (예: 어디서 찍은 거예요?, 이 분 누구예요?, 하지원 치어리더 다른나라가지않았음??)
※ 단순한 놀람이나 표현은 질문이 아님
- **praise**: 인물이나 콘텐츠에 대해 **긍정적인 평가나 칭찬 의도**가 명확히 드러나는 댓글.  (예: "진짜 멋있어요", "영상 너무 잘 만들었네요", "예쁘다", "목소리가 최고예요")
※ 칭찬으로 해석할 **객관적 근거가 있는 경우에만** praise로 분류하세요.
- **sympathy**: 슬픔이나 고생, 상처, 힘듦에 대해 공감하거나 안타까움을 드러낸 댓글 (예: 공감돼요, 슬퍼요, 안타까워요, 눈물 났어요, 힘들었겠다)
- **congratulations**: 어떤 일이나 성취에 대해 **축하의 의도**가 명확한 경우 (예: 결혼 축하해요, 드디어 됐네요, 🎉(폭죽이모티콘), 말왕님 입덕 환영합니다ㅋㅋ)
 ※ 단순히 좋아요를 눌렀다거나 예쁜 장면을 봤다고 해서 축하로 분류하지 않음
- **concern**: 걱정, 우려, 실망, 조심, 불편함, 불안 등의 표현이 있는 경우 (예: 조심하세요, 걱정되네요, 건강 챙기세요, 너무 위험해 보여요, 못 봤네요 아쉽다)
- **hate**: 공격적·비하·불쾌·비꼼이 명확히 드러나는 댓글. 유머나 의견 표현이더라도 조롱, 비난, 불만의 뉘앙스가 강하면 hate (예: 꼴 보기 싫어요, 뭐냐 진짜, 진짜 별로다, 하지마, 흉한, 보기 민망하다, 재미없다)
※외모, 태도, 말투 등에 대한 감탄(예: 너무 예뻐, 잘생겼다, 멋있다)은 절대 hate가 아닙니다. 감정 표현이 담긴 긍정 발언은 praise
---

❗️**분류 규칙 (중요)**:

1. **반드시 아래 9개 중 하나**로 분류하세요. `other`는 사용하지 마세요.
2. 단순히 유쾌한 말이나 웃음 표현, 축하 아닌 단순 감탄이나 긍정 표현, 욕설이 없는 경우에도 단순한 "ㅋㅋ", "개웃기다" 같은 말이면 joy
3. 대상에 대한 명백한 칭찬이면 **praise**,
 다음은 praise가 아님:
    - 하트, 이모티콘, 감탄사, 이름 언급만 있는 경우 → 보통 joy
    - 긍정 표현 + 아쉬움/불만/조롱 혼합 → concern, sympathy, hate
    - 단순 감상 또는 감정 표현 → joy
    - 예: "좋지만 슬프다", "예쁘지만 왜 저래" → sympathy 또는 concern
4. 명확한 불만·비난이면 **hate**,
 아래와 같은 표현은 **hate가 아닙니다**:
   - 웃기지만 부정적인 상황 표현: → **joy**
   - 걱정되거나 아쉬운 표현: → **concern**
   - 약간 날카롭지만 응원이 섞인 말: → **supportive**
5. 걱정이면 **concern**,  
6. 감정 공유면 **sympathy**,
   단순 감정 표현도 **슬픔/고생/눈물 표현**이면 sympathy but 감정 섞인 비판이나 우려면 concern
7. 성취에 대한 축하는 **congratulations**
8. "**고마워요**", "**반가워요**"는 상황에 따라 **supportive**, **praise**, 또는 **joy**로 구분하세요.
10. 질문처럼 보여도 **의문이 아닌 경우는 question이 아님**
11. 단순히 좋아요를 눌렀다, 응원한다, 보고 싶다 → **supportive 또는 praise**
12. "**좋지만 슬프다**", "**응원했지만 아쉬움**" → 슬픔이 주면 sympathy, 아쉬움이 주면 concern  
13. 특정 인물을 언급하며 "밖에 안보인다", "너무 예뻐" 등은 praise이며, 비하 목적이 없으면 hate로 분류하지 마세요.


---

📢 **출력 형식**:
- 오직 라벨만 영어 소문자로 한 줄에 하나씩 출력(숫자, 콤마, 기타 기호 없이)
- 요청한 댓글 개수와 정확히 같은 줄 수로 출력하세요.
- 반드시 다음 중 하나만 출력 (띄어쓰기 없음):
joy
supportive
suggestion
question
praise
sympathy
congratulations
concern
hate
---

이제 아래 댓글들을 분류해주세요.  
**출력은 라벨만 영어 소문자로 한 줄씩** 작성해주세요.

댓글 목록:  
{numbered}
"""


def get_summary_prompt(comments: list[str], category: str) -> str:
    comments_text = "\n".join(f"- {comment}" for comment in comments)
    num_comments = len(comments)

    return f"""
당신은 유튜브 영상의 댓글을 분석하여 시청자들의 반응을 요약하는 전문가입니다.

다음은 영상의 '{category}' 범주에 속하는 댓글 {num_comments}개의 목록입니다.

다음 조건에 따라 하나의 문단으로 자연스럽게 요약을 작성해주세요:

1. 댓글이 1~2개인 경우:
   - 절대 창작하지 마세요.
   - 실제 댓글 내용을 기반으로 감정이나 반응을 자연스럽게 1~2문장으로 정리해주세요.

2. 댓글이 3개 이상인 경우:
   - 시청자들이 공통적으로 느낀 감정이나 분위기
   - 어떤 콘텐츠(인물, 장면, 주제 등)에 반응했는지
   - 콘텐츠에 대한 평가나 시청자 일상에 미친 영향
   - 위 기준을 바탕으로 객관적인 문장으로 3~10문장 이내로 요약해주세요.
   - 핵심 내용을 놓치지 않되, 길이는 적절히 유지해주세요.

댓글 목록:
{comments_text}
"""

def contents_prompt(summaries: list[str]) -> str:
    summary_text = "\n".join(f"- {s}" for s in summaries)

    return f"""
당신은 유튜브 콘텐츠 기획 전문가입니다.

아래는 최근 3개월간 유튜브 댓글을 요약한 내용입니다. 이 요약을 참고하여, 시청자들이 흥미를 가질만한 **새로운 영상 콘텐츠 주제 4개**를 JSON 배열로 출력해주세요.

📌 출력 형식 (반드시 따르세요):
- JSON 배열 형태로 출력 (예시 ↓)
- 다른 텍스트 절대 출력하지 말 것 (인사말, 설명 등 금지)
- 각 항목은 아래처럼 구성해야 합니다:

[
  {{
    "topic": "한화 치어리더 VLOG",
    "topic_rec": "한화 이글스 치어리더의 하루를 밀착 취재한 콘텐츠입니다. 연습 장면, 준비 과정, 팬과의 소통 등을 포함하며, 감성적인 배경음악과 자막을 활용해 팬들과의 교감을 강조합니다.",
    "comment_analysis": "praise와 joy 범주의 댓글에서 치어리더에 대한 관심과 응원이 매우 많았고, 비하인드 영상에 대한 요청이 반복적으로 등장했습니다."
  }},
  ...
]

규칙:
1. 반드시 위 예시와 같은 JSON 형식만 출력하세요.
2. 문자열에는 반드시 큰따옴표(`"`)만 사용하고, 문자열 안에 큰따옴표가 들어간 경우 `\\"`처럼 이스케이프 처리하세요.
3. `"topic"`은 **영상 제목으로 적합한 구체적인 키워드 형식의 콘텐츠 주제**
4. `"topic_rec"`은 콘텐츠 기획안이고, 영상 흐름, 타겟, 연출 스타일, 자막, 감정선, 편집 방식 등 **풍부한 연출 가이드를 포함**해야 합니다.
5. `"comment_analysis"`: 위 콘텐츠를 **왜 추천했는지에 대한 댓글 기반 분석 요약**, 댓글 기반으로 작성하고 창작하진 마세요. 
   (예: 어떤 범주의 댓글에서 어떤 반응이 많았는지, 어떤 장면/인물/상황에 대한 수요가 있었는지 등)

요약 목록:
{summary_text}
"""